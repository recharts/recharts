# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - 3.x

env:
  NODE_VERSION: 20.x

jobs:
  checkout:
    name: Checkout Code and install dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: 'recharts'

      - name: Checkout Integration Tests
        uses: actions/checkout@v4
        with:
          repository: recharts/recharts-integ
          path: 'recharts-integ'

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'recharts/package-lock.json'

      - name: Install Dependencies
        working-directory: ./recharts
        run: npm ci

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: checkout

    steps:
      - name: Build
        working-directory: ./recharts
        run: npm run build

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Unit Tests
        working-directory: ./recharts
        run: npm run test-coverage

  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Typecheck
        working-directory: ./recharts
        run: npm run check-types

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Lint
        working-directory: ./recharts
        run: npm run lint

  storybook:
    name: Storybook
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Serve Storybook
        working-directory: ./recharts
        run: npm run test-storybook:ci

  pack:
    name: Pack
    runs-on: ubuntu-latest
    needs: [checkout, build]
    steps:
      - name: Pack
        id: pack_library
        working-directory: ./recharts
        run: |
          npm pack
          tgz_file=$(ls *.tgz)
          echo "Packed library file: $tgz_file"
          echo "tgz_filename=$tgz_file" >> $GITHUB_OUTPUT

      - name: Publish Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: recharts-snapshot.tgz
          path: ${{ steps.pack_library.outputs.tgz_filename }}

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [checkout, pack]
    steps:
      - name: Run Integration Tests
        working-directory: ./recharts-integ
        run: ./run-test.sh integrations-npm/ts-react18 # ${{ steps.pack_library.outputs.tgz_filename }}
