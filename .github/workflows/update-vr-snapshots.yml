# This workflow updates visual regression baseline snapshots.
# It can be triggered manually and will:
# - Run on main branch: create a new branch, commit changes, and open a PR
# - Run in a PR: commit and push changes to the current PR branch

name: Update VR Snapshots

permissions:
  contents: write
  pull-requests: write

on:
  workflow_dispatch:

env:
  NODE_VERSION: 20.x

jobs:
  update_snapshots:
    name: Update Visual Regression Snapshots
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # Fetch full history to allow branch creation
          fetch-depth: 0
          # Use a token that can create PRs
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Docker Image
        run: npm run test-vr:prepare

      - name: Update VR Snapshots
        run: npm run test-vr:update

      - name: Check for changes
        id: check_changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in VR snapshots"
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected in VR snapshots"
          fi

      - name: Configure Git
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and Push on Main Branch
        if: steps.check_changes.outputs.has_changes == 'true' && github.ref == 'refs/heads/main'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH_NAME="update-vr-snapshots-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$BRANCH_NAME"
          git add .
          git commit -m "chore: update visual regression snapshots"
          git push origin "$BRANCH_NAME"
          gh pr create \
            --title "chore: update visual regression snapshots" \
            --body "This PR updates the visual regression baseline snapshots. Please review the changes carefully before merging." \
            --base main \
            --head "$BRANCH_NAME"

      - name: Commit and Push on PR Branch
        if: steps.check_changes.outputs.has_changes == 'true' && github.event_name == 'pull_request'
        run: |
          git add .
          git commit -m "chore: update visual regression snapshots"
          git push

      - name: Commit and Push on Non-Main Branch
        if: steps.check_changes.outputs.has_changes == 'true' && github.ref != 'refs/heads/main' && github.event_name != 'pull_request'
        run: |
          git add .
          git commit -m "chore: update visual regression snapshots"
          git push

      - name: No Changes
        if: steps.check_changes.outputs.has_changes == 'false'
        run: echo "No snapshot updates needed. Workflow completed successfully."
